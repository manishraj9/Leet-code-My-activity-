#https://leetcode.com/problems/find-closest-node-to-given-two-nodes
class Solution:
    def closestMeetingNode(self, edges: List[int], node1: int, node2: int) -> int:
        n = len(edges)

        def get_distances(start: int) -> List[int]:
            dist = [-1] * n
            dist[start] = 0
            current = start
            distance = 0
            while edges[current] != -1 and dist[edges[current]] == -1:
                distance += 1
                current = edges[current]
                dist[current] = distance
            return dist

        dist1 = get_distances(node1)
        dist2 = get_distances(node2)

        result = -1
        min_dist = float('inf')

        for i in range(n):
            if dist1[i] != -1 and dist2[i] != -1:
                max_dist = max(dist1[i], dist2[i])
                if max_dist < min_dist:
                    min_dist = max_dist
                    result = i

        return result
        
